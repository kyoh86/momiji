" 'momiji.vim' -- Vim color scheme.
" Maintainer:   kyoh86 (me@kyoh86.dev)
" Description:  Colorscheme that focus ease of use and clearly defined contrasting colors with a slightly earthy tone.
" Original Source: https://github.com/kyoh86/momiji

highlight clear
if exists("syntax_on")
  syntax reset
endif

let g:colors_name='momiji'

if !has('gui_running') && &t_Co != 256
  finish
endif

let g:momiji_colors = {}
let g:momiji_colors['black'] =        '#{{.Black.ToHex}}'
let g:momiji_colors['red'] =          '#{{.Red.ToHex}}'
let g:momiji_colors['green'] =        '#{{.Green.ToHex}}'
let g:momiji_colors['yellow'] =       '#{{.Yellow.ToHex}}'
let g:momiji_colors['blue'] =         '#{{.Blue.ToHex}}'
let g:momiji_colors['magenta'] =      '#{{.Magenta.ToHex}}'
let g:momiji_colors['cyan'] =         '#{{.Cyan.ToHex}}'
let g:momiji_colors['white'] =        '#{{.White.ToHex}}'
let g:momiji_colors['brightblack'] =   '#{{.BrightBlack.ToHex}}'
let g:momiji_colors['brightred'] =     '#{{.BrightRed.ToHex}}'
let g:momiji_colors['brightgreen'] =   '#{{.BrightGreen.ToHex}}'
let g:momiji_colors['brightyellow'] =  '#{{.BrightYellow.ToHex}}'
let g:momiji_colors['brightblue'] =    '#{{.BrightBlue.ToHex}}'
let g:momiji_colors['brightmagenta'] = '#{{.BrightMagenta.ToHex}}'
let g:momiji_colors['brightcyan'] =    '#{{.BrightCyan.ToHex}}'
let g:momiji_colors['brightwhite'] =   '#{{.BrightWhite.ToHex}}'
let g:momiji_colors['hardblack'] =    '#{{.HardBlack.ToHex}}'
let g:momiji_colors['gradation1'] =   '#{{.Gradation1.ToHex}}'
let g:momiji_colors['gradation2'] =   '#{{.Gradation2.ToHex}}'
let g:momiji_colors['gradation3'] =   '#{{.Gradation3.ToHex}}'
let g:momiji_colors['gradation4'] =   '#{{.Gradation4.ToHex}}'
let g:momiji_colors['gradation5'] =   '#{{.Gradation5.ToHex}}'

let g:momiji_palette = {}
let g:momiji_palette['black'] =        [g:momiji_colors.black,        {{.Black.Index}}]
let g:momiji_palette['red'] =          [g:momiji_colors.red,          {{.Red.Index}}]
let g:momiji_palette['green'] =        [g:momiji_colors.green,        {{.Green.Index}}]
let g:momiji_palette['yellow'] =       [g:momiji_colors.yellow,       {{.Yellow.Index}}]
let g:momiji_palette['blue'] =         [g:momiji_colors.blue,         {{.Blue.Index}}]
let g:momiji_palette['magenta'] =      [g:momiji_colors.magenta,      {{.Magenta.Index}}]
let g:momiji_palette['cyan'] =         [g:momiji_colors.cyan,         {{.Cyan.Index}}]
let g:momiji_palette['white'] =        [g:momiji_colors.white,        {{.White.Index}}]
let g:momiji_palette['brightblack'] =   [g:momiji_colors.brightblack,   {{.BrightBlack.Index}}]
let g:momiji_palette['brightred'] =     [g:momiji_colors.brightred,     {{.BrightRed.Index}}]
let g:momiji_palette['brightgreen'] =   [g:momiji_colors.brightgreen,   {{.BrightGreen.Index}}]
let g:momiji_palette['brightyellow'] =  [g:momiji_colors.brightyellow,  {{.BrightYellow.Index}}]
let g:momiji_palette['brightblue'] =    [g:momiji_colors.brightblue,    {{.BrightBlue.Index}}]
let g:momiji_palette['brightmagenta'] = [g:momiji_colors.brightmagenta, {{.BrightMagenta.Index}}]
let g:momiji_palette['brightcyan'] =    [g:momiji_colors.brightcyan,    {{.BrightCyan.Index}}]
let g:momiji_palette['brightwhite'] =   [g:momiji_colors.brightwhite,   {{.BrightWhite.Index}}]
let g:momiji_palette['hardblack'] =    [g:momiji_colors.hardblack,    {{.HardBlack.Index}}]
let g:momiji_palette['gradation1'] =   [g:momiji_colors.gradation1,   {{.Gradation1.Index}}]
let g:momiji_palette['gradation2'] =   [g:momiji_colors.gradation2,   {{.Gradation2.Index}}]
let g:momiji_palette['gradation3'] =   [g:momiji_colors.gradation3,   {{.Gradation3.Index}}]
let g:momiji_palette['gradation4'] =   [g:momiji_colors.gradation4,   {{.Gradation4.Index}}]
let g:momiji_palette['gradation5'] =   [g:momiji_colors.gradation5,   {{.Gradation5.Index}}]

" Set a highlight group.
" `params` contains some options like below.
"   - fg     color
"   - bg     color
"   - empha  list of bold|italic|inverseg|underline|undercurlg
"   - guisp  a color for various underlines
"
" Which color for fg or bg you can get it from g:momiji_palette e.g.:
"   call MomijiHighlight(Pmenu, {'fg': g:momiji_palette.red})
function! MomijiHighlight(group, params)
  " params: fg, bg, empha, guisp
  let l:histr = [ 'highlight', a:group ]

  let l:fg = get(a:params, 'fg', get(a:params, 'foreground', []))
  if len(l:fg) >= 2
    call extend(l:histr, ['guifg=' . l:fg[0], 'ctermfg=' . l:fg[1]])
  endif

  let l:bg = get(a:params, 'bg', get(a:params, 'background', []))
  if len(l:bg) >= 2
    call extend(l:histr, ['guibg=' . l:bg[0], 'ctermbg=' . l:bg[1]])
  endif

  let l:empha = get(a:params, 'empha', [])
  let l:empha = filter(l:empha, {_, v -> v !=# ''})

  if len(l:empha) > 0
    let l:em = join(l:empha, ',')
    call extend(l:histr, ['gui=' . l:em, 'cterm=' . l:em])
  endif

  let l:guisp = get(a:params, 'guisp', [])
  if len(l:guisp) > 0
    call add(l:histr, 'guisp=' . l:guisp[0])
  endif

  execute join(l:histr, ' ')
endfunction

" Momiji Hi Groups:
" memoize common hi groups
highlight MomijiWhite {{Foreground .Black}}
highlight MomijiRed {{Foreground .Red}}
highlight MomijiGreen {{Foreground .Green}}
highlight MomijiYellow {{Foreground .Yellow}}
highlight MomijiBlue {{Foreground .Blue}}
highlight MomijiMagenta {{Foreground .Magenta}}
highlight MomijiCyan {{Foreground .Cyan}}
highlight MomijiBlack {{Foreground .Black}}
highlight MomijiRedBold {{Foreground .Red}} {{Emphasis "bold"}}
highlight MomijiGreenBold {{Foreground .Green}} {{Emphasis "bold"}}
highlight MomijiYellowBold {{Foreground .Yellow}} {{Emphasis "bold"}}
highlight MomijiBlueBold {{Foreground .Blue}} {{Emphasis "bold"}}
highlight MomijiMagentaBold {{Foreground .Magenta}} {{Emphasis "bold"}}
highlight MomijiCyanBold {{Foreground .Cyan}} {{Emphasis "bold"}}

highlight MomijiBrightRed {{Foreground .BrightRed}}
highlight MomijiBrightGreen {{Foreground .BrightGreen}}
highlight MomijiBrightYellow {{Foreground .BrightYellow}}
highlight MomijiBrightBlue {{Foreground .BrightBlue}}
highlight MomijiBrightMagenta {{Foreground .BrightMagenta}}
highlight MomijiBrightCyan {{Foreground .BrightCyan}}
highlight MomijiBrightBlack {{Foreground .BrightBlack}}
highlight MomijiBrightWhite {{Foreground .BrightWhite}}

" special
highlight MomijiBrightRedBold {{Foreground .BrightRed}} {{Emphasis "bold"}}
highlight MomijiGradation1 {{Foreground .Gradation1}}
highlight MomijiGradation2 {{Foreground .Gradation2}}
highlight MomijiGradation3 {{Foreground .Gradation3}}
highlight MomijiGradation4 {{Foreground .Gradation4}}
highlight MomijiGradation5 {{Foreground .Gradation5}}

" General UI:
" Normal text
highlight Normal {{Foreground .BrightWhite}} {{Background .Black}}
highlight NormalFloat {{Foreground .BrightWhite}} {{Background .Gradation1}}

" Screen line that the cursor is
highlight! CursorLine NONE
highlight CursorLine {{Background .Gradation1}}
" Screen column that the cursor is
highlight CursorColumn {{Background .BrightBlack}}

" Tab pages line filler
highlight TabLineFill {{Foreground .Green}} {{Background .Black}}
" Active tab page label
highlight TabLineSel {{Foreground .Red}} {{Background .Black}} {{Emphasis "bold"}}
" Not active tab page label
highlight! link TabLine TabLineFill

" Match paired bracket under the cursor
highlight MatchParen {{Foreground .Yellow}} {{Background .BrightBlack}} {{Emphasis "bold"}}

" Highlighted screen columns
highlight ColorColumn {{Background .BrightBlack}}

" Concealed element: \lambda → λ
highlight Conceal {{Foreground .Blue}}

highlight! link NonText MomijiBrightBlack
highlight! link SpecialKey MomijiBrightBlack
highlight! link Whitespace MomijiBrightBlack

highlight Visual {{Foreground .Black}} {{Background .Yellow}}
highlight! link VisualNOS Visual

highlight Search {{Foreground .Black}} {{Background .BrightBlue}}
highlight IncSearch None
highlight IncSearch {{Foreground .Black}} {{Background .BrightMagenta}}
highlight CurSearch None
highlight CurSearch {{Foreground .Black}} {{Background .BrightGreen}}
highlight Substitute None
highlight Substitute {{Foreground .Black}} {{Background .BrightMagenta}}

highlight Underlined {{Foreground .Blue}} {{Emphasis "underline"}}

highlight StatusLine {{Foreground .White}} {{Background .Gradation2}} {{Emphasis "bold"}}
highlight StatusLineNC {{Foreground .White}} {{Background .Black}} {{Emphasis "underline"}}

" The column separating vertically split windows
highlight VertSplit {{Foreground .Gradation4}} {{Emphasis "bold"}}

" Current match in wildmenu completion
highlight WildMenu {{Foreground .Blue}} {{Background .Black}} {{Emphasis "bold"}}

" Directory names, special names in listing
highlight! link Directory MomijiGreenBold

" Titles for output from :set all, :autocmd, etc.
highlight! link Title MomijiYellowBold

" Error messages on the command line
highlight ErrorMsg {{Foreground .BrightWhite}} {{Background .Red}}
" More prompt: -- More --
highlight! link MoreMsg MomijiYellowBold
" Current mode message: -- INSERT --
highlight! link ModeMsg MomijiYellowBold
" 'Press enter' prompt and yes/no questions
highlight! link Question MomijiBrightRedBold
" Warning messages
highlight! link WarningMsg MomijiRedBold
" Gutter:
" Line number for :number and :# commands
highlight LineNr {{Foreground .White}} {{Background .HardBlack}}

" Line number of CursorLine
highlight CursorLineNr {{Foreground .Gradation1}} {{Background .Blue}} {{Emphasis "bold"}}

if hlexists('LineNrAbove')
  highlight LineNrAbove {{Foreground .BrightMagenta}} {{Background .HardBlack}}
  highlight LineNrBelow {{Foreground .BrightGreen}} {{Background .HardBlack}}
endif

" Column where signs are displayed
highlight SignColumn {{Background .HardBlack}}

" Line used for closed folds
highlight Folded {{Foreground .White}} {{Background .Black}} {{Emphasis "italic"}}
" Column where folds are displayed
highlight FoldColumn {{Foreground .White}} {{Background .Black}}
" Cursor:
" Character under cursor
highlight Cursor {{Foreground .Black}} {{Background .BrightYellow}}
" Character under cursor in a focused terminal
highlight link TermCursor Cursor
" Cursor in an unfocused terminal
highlight link TermCursorNC Cursor
" Visual mode cursor, selection
highlight link vCursor Cursor
" Input moder cursor
highlight! link iCursor Cursor
" Language mapping cursor
highlight! link lCursor Cursor
" Syntax Highlighting:
highlight! link Special MomijiBrightYellow

highlight Comment {{Foreground .White}} {{Emphasis "italic"}}
highlight Todo {{Foreground .BrightWhite}} {{Background .Black}} {{Emphasis "bold" "italic"}}
highlight Error {{Foreground .BrightRed}} {{Background .Black}} {{Emphasis "bold" "inverse"}}

" String constant: "this is a string"
highlight String {{Foreground .Green}}

" Generic statement
highlight! link Statement MomijiYellow
" if, then, else, endif, swicth, etc.
highlight! link Conditional MomijiYellow
" for, do, while, etc.
highlight! link Repeat MomijiYellow
" case, default, etc.
highlight! link Label MomijiYellow
" try, catch, throw
highlight! link Exception MomijiRed
" sizeof, "+", "*", etc.
highlight! link Operator None
" Any other keyword
highlight! link Keyword MomijiRed

" Variable name
highlight! link Identifier MomijiBrightBlue
" Function name
highlight! link Function MomijiBlue

" Generic preprocessor
highlight! link PreProc MomijiMagenta
" Preprocessor #include
highlight! link Include MomijiMagenta
" Preprocessor #define
highlight! link Define MomijiMagenta
" Same as Define
highlight! link Macro MomijiMagenta
" Preprocessor #if, #else, #endif, etc.
highlight! link PreCondit MomijiMagenta

" Generic constant
highlight! link Constant MomijiBrightMagenta
" Character constant: 'c', '/n'
highlight! link Character MomijiBrightMagenta
" Boolean constant: TRUE, false
highlight! link Boolean MomijiBrightMagenta
" Number constant: 234, 0xff
highlight! link Number MomijiBrightMagenta
" Floating point constant: 2.3e10
highlight! link Float MomijiBrightMagenta

" Generic type
highlight! link Type MomijiCyan
" static, register, volatile, etc
highlight! link StorageClass MomijiCyan
" struct, union, enum, etc.
highlight! link Structure MomijiBrightRed
" typedef
highlight! link Typedef MomijiBrightRed
" Completion Menu:
" Popup menu: normal item
highlight Pmenu {{Background .Gradation1}}
" Popup menu: selected item
highlight PmenuSel {{Background .Gradation2}} {{Emphasis "bold"}}
" Popup menu: scrollbar
highlight PmenuSbar {{Background .Gradation2}}
" Popup menu: scrollbar thumb
highlight PmenuThumb {{Background .Gradation2}}
" Diffs:
highlight DiffDelete {{Foreground .BrightRed}} {{Background .Black}}
highlight DiffAdd {{Foreground .BrightGreen}} {{Background .Black}}
highlight DiffChange {{Foreground .Cyan}} {{Background .Black}}
highlight DiffText {{Foreground .BrightYellow}} {{Background .Black}}
" Spelling:
if has("spell")
  " Not capitalised word, or compile warnings
  highlight SpellCap {{Emphasis "undercurl"}} guisp=#{{.Blue.ToHex}}
  " Not recognized word
  highlight SpellBad {{Emphasis "undercurl"}} guisp=#{{.Blue.ToHex}}
  " Wrong spelling for selected region
  highlight SpellLocal {{Emphasis "undercurl"}} guisp=#{{.Cyan.ToHex}}
  " Rare word
  highlight SpellRare {{Emphasis "undercurl"}} guisp=#{{.Magenta.ToHex}}
endif

if hlexists('FloatBorder')
  highlight FloatBorder None
  highlight FloatBorder {{Foreground .Gradation4}} {{Emphasis "bold"}}
  highlight FloatShadow None
  highlight FloatShadow {{Background .Gradation1}}
endif

if hlexists('DiagnosticInfo')
  highlight DiagnosticDeprecated cterm=strikethrough gui=strikethrough guisp=Red
  highlight DiagnosticOk    {{Foreground .BrightGreen}}
  highlight DiagnosticHint  {{Foreground .Gradation3}}
  highlight DiagnosticInfo  {{Foreground .BrightBlue}}
  highlight DiagnosticWarn  {{Foreground .BrightRed}}
  highlight DiagnosticError {{Foreground .Red}}
  highlight DiagnosticUnderlineOk {{Emphasis "underline"}} guisp=#{{.BrightGreen.ToHex}}
  highlight DiagnosticUnderlineHint {{Emphasis "underline"}} guisp=#{{.Gradation3.ToHex}}
  highlight DiagnosticUnderlineInfo {{Emphasis "underline"}} guisp=#{{.BrightBlue.ToHex}}
  highlight DiagnosticUnderlineWarn {{Emphasis "underline"}} guisp=#{{.BrightRed.ToHex}}
  highlight DiagnosticUnderlineError {{Emphasis "underline"}} guisp=#{{.Red.ToHex}}
endif

" vim: set sw=2 ts=2 sts=2 et tw=80 ft=vim fdm=marker:
