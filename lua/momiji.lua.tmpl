local M = {}

---@class MomijiHighlightColors
---@field black string RGB(#rrggbb) color
---@field red string RGB(#rrggbb) color
---@field green string RGB(#rrggbb) color
---@field yellow string RGB(#rrggbb) color
---@field blue string RGB(#rrggbb) color
---@field magenta string RGB(#rrggbb) color
---@field cyan string RGB(#rrggbb) color
---@field white string RGB(#rrggbb) color
---@field brightblack string RGB(#rrggbb) color
---@field brightred string RGB(#rrggbb) color
---@field brightgreen string RGB(#rrggbb) color
---@field brightyellow string RGB(#rrggbb) color
---@field brightblue string RGB(#rrggbb) color
---@field brightmagenta string RGB(#rrggbb) color
---@field brightcyan string RGB(#rrggbb) color
---@field brightwhite string RGB(#rrggbb) color
---@field gradation1 string RGB(#rrggbb) color
---@field gradation2 string RGB(#rrggbb) color
---@field gradation3 string RGB(#rrggbb) color
---@field gradation4 string RGB(#rrggbb) color
---@field gradation5 string RGB(#rrggbb) color

---@type MomijiHighlightColors
M.colors = {
  black = "#{{.Black.ToHex}}",
  red = "#{{.Red.ToHex}}",
  green = "#{{.Green.ToHex}}",
  yellow = "#{{.Yellow.ToHex}}",
  blue = "#{{.Blue.ToHex}}",
  magenta = "#{{.Magenta.ToHex}}",
  cyan = "#{{.Cyan.ToHex}}",
  white = "#{{.White.ToHex}}",
  brightblack = "#{{.BrightBlack.ToHex}}",
  brightred = "#{{.BrightRed.ToHex}}",
  brightgreen = "#{{.BrightGreen.ToHex}}",
  brightyellow = "#{{.BrightYellow.ToHex}}",
  brightblue = "#{{.BrightBlue.ToHex}}",
  brightmagenta = "#{{.BrightMagenta.ToHex}}",
  brightcyan = "#{{.BrightCyan.ToHex}}",
  brightwhite = "#{{.BrightWhite.ToHex}}",
  gradation1 = "#{{.Gradation1.ToHex}}",
  gradation2 = "#{{.Gradation2.ToHex}}",
  gradation3 = "#{{.Gradation3.ToHex}}",
  gradation4 = "#{{.Gradation4.ToHex}}",
  gradation5 = "#{{.Gradation5.ToHex}}",
}

---@class MomijiHighlightColor
---@field gui string    Color for guibg/guifg
---@field cterm integer  Color index for ctermfg/ctermbg

---@class MomijiHighlightPalette
---@field black MomijiHighlightColor
---@field red MomijiHighlightColor
---@field green MomijiHighlightColor
---@field yellow MomijiHighlightColor
---@field blue MomijiHighlightColor
---@field magenta MomijiHighlightColor
---@field cyan MomijiHighlightColor
---@field white MomijiHighlightColor
---@field brightblack MomijiHighlightColor
---@field brightred MomijiHighlightColor
---@field brightgreen MomijiHighlightColor
---@field brightyellow MomijiHighlightColor
---@field brightblue MomijiHighlightColor
---@field brightmagenta MomijiHighlightColor
---@field brightcyan MomijiHighlightColor
---@field brightwhite MomijiHighlightColor
---@field gradation1 MomijiHighlightColor
---@field gradation2 MomijiHighlightColor
---@field gradation3 MomijiHighlightColor
---@field gradation4 MomijiHighlightColor
---@field gradation5 MomijiHighlightColor

---@type MomijiHighlightPalette
M.palette = {
  black = { gui = "#{{.Black.ToHex}}", cterm = {{.Black.Index}} },
  red = { gui = "#{{.Red.ToHex}}", cterm = {{.Red.Index}} },
  green = { gui = "#{{.Green.ToHex}}", cterm = {{.Green.Index}} },
  yellow = { gui = "#{{.Yellow.ToHex}}", cterm = {{.Yellow.Index}} },
  blue = { gui = "#{{.Blue.ToHex}}", cterm = {{.Blue.Index}} },
  magenta = { gui = "#{{.Magenta.ToHex}}", cterm = {{.Magenta.Index}} },
  cyan = { gui = "#{{.Cyan.ToHex}}", cterm = {{.Cyan.Index}} },
  white = { gui = "#{{.White.ToHex}}", cterm = {{.White.Index}} },
  brightblack = { gui = "#{{.BrightBlack.ToHex}}", cterm = {{.BrightBlack.Index}} },
  brightred = { gui = "#{{.BrightRed.ToHex}}", cterm = {{.BrightRed.Index}} },
  brightgreen = { gui = "#{{.BrightGreen.ToHex}}", cterm = {{.BrightGreen.Index}} },
  brightyellow = { gui = "#{{.BrightYellow.ToHex}}", cterm = {{.BrightYellow.Index}} },
  brightblue = { gui = "#{{.BrightBlue.ToHex}}", cterm = {{.BrightBlue.Index}} },
  brightmagenta = { gui = "#{{.BrightMagenta.ToHex}}", cterm = {{.BrightMagenta.Index}} },
  brightcyan = { gui = "#{{.BrightCyan.ToHex}}", cterm = {{.BrightCyan.Index}} },
  brightwhite = { gui = "#{{.BrightWhite.ToHex}}", cterm = {{.BrightWhite.Index}} },
  gradation1 = { gui = "#{{.Gradation1.ToHex}}", cterm = {{.Gradation1.Index}} },
  gradation2 = { gui = "#{{.Gradation2.ToHex}}", cterm = {{.Gradation2.Index}} },
  gradation3 = { gui = "#{{.Gradation3.ToHex}}", cterm = {{.Gradation3.Index}} },
  gradation4 = { gui = "#{{.Gradation4.ToHex}}", cterm = {{.Gradation4.Index}} },
  gradation5 = { gui = "#{{.Gradation5.ToHex}}", cterm = {{.Gradation5.Index}} },
}

---@alias MomijiHighlightEmpha "bold"|"underline"|"undercurl"|"underdouble"|"underdotted"|"underdashed"|"strikethrough"|"reverse"|"inverse"|"italic"|"standout"|"altfont"|"nocombine"|"NONE"

---@class MomijiHighlightParam
---@field fg     MomijiHighlightColor    Foreground color
---@field bg     MomijiHighlightColor    Background color
---@field empha  MomijiHighlightEmpha[]  Special highlight for emphasis text.
---@field guisp  MomijiHighlightColor    Color for various underlines
---@field blend  integer                 Blend level for a highlight group

---Set a highlight group.
---Which color for "fg" or "bg", you can get it from "palette".
---e.g.: require"momiji.colors".highlight("Pmenu", { fg = require"momiji.colors".palette.red })
---@param group string    Target highlight group name.
---@param params MomijiHighlightParam
function M.highlight(group, params)
  vim.validate({
    group = { group, "string" },
    params = { params, "table" },
  })
  local histr = { "highlight", group }

  local fg = vim.tbl_get(params, "fg", "foreground") or {}
  if #fg >= 2 then
    vim.list_extend(histr, { "guifg=" .. fg.gui, "ctermfg=" .. fg.cterm })
  end

  local bg = vim.tbl_get(params, "bg", "background") or {}
  if #bg >= 2 then
    vim.list_extend(histr, { "guibg=" .. bg.gui, "ctermbg=" .. bg.cterm })
  end

  local empha = vim.tbl_filter(function(v)
    return v ~= ""
  end, params.empha or {})

  if #empha > 0 then
    local em = table.concat(empha, ",")
    vim.list_extend(histr, { "gui=" .. em, "cterm=" .. em })
  end

  local guisp = params.guisp or {}
  if #guisp > 0 then
    table.insert(histr, "guisp=" .. guisp.gui)
  end

  vim.cmd.execute(table.concat(histr, " "))
end

return M
